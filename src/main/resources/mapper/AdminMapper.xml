<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapbius_server.mapper.AdminMapper">

    <insert id="insertRoleAdmin">
        INSERT INTO admin_users (user_id) VALUES (#{id})
    </insert>

    <insert id="insertOrDeleteRoleAdmin">
        <choose>
            <when test="(select count(*) from admin_users where user_id = #{id}) > 0">
                DELETE FROM admin_users WHERE user_id = #{id};
            </when>
            <otherwise>
                INSERT INTO admin_users (user_id) VALUES (#{id});
            </otherwise>
        </choose>
    </insert>

    <delete id="deleteRoleAdmin">
        DELETE FROM admin_users WHERE user_id = #{id}
    </delete>

    <update id="updateActivateAccount">
        UPDATE users
        SET is_deleted = is_deleted ^ 1
        WHERE id = #{id};
    </update>

    <update id="updateDeActivateAccount">
        UPDATE users
        SET is_deleted = 1
        WHERE id = #{id} and is_deleted = 0;
    </update>


    <!-- ID 존재 여부 확인 -->
    <select id="existsAdminUser" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM admin_users
        WHERE user_id = #{id}
    </select>

    <!-- ID 삭제 -->
    <delete id="deleteAdminUser">
        DELETE FROM admin_users WHERE user_id = #{id}
    </delete>

    <!-- ID 삽입 -->
    <insert id="insertAdminUser">
        INSERT INTO admin_users (user_id) VALUES (#{id})
    </insert>



    <!-- 전체 사용자 정보 조회 -->
    <select id="getAllUsers" resultType="map">
        SELECT
            u.profile_image,
            u.nick_name,
            u.id,
            u.email,
            u.birth_date,
            u.created_at,
            u.gender,
            CASE
                WHEN u.is_deleted = 0 THEN 'activate'
                ELSE 'deactivate'
                END AS account_status,
            CASE
                WHEN a.user_id IS NOT NULL THEN 'admin'
                ELSE 'normal'
                END AS role
        FROM users u
                 LEFT JOIN admin_users a ON u.id = a.user_id
        ORDER BY u.created_at DESC;
    </select>



</mapper>